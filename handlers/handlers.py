from aiogram import F, Dispatcher
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from createBot import dp
from aiogram.fsm.state import StatesGroup, State

import keyboards.keyboards as kb

from api_gateway.film_service import get_film_data, get_kinopoisk_id_by_title # —Ñ–∞–π–ª—ã –≤ –≤–µ—Ç–∫–µ find_film_service

class FilmSearchState(StatesGroup):   # –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –±–æ—Ç–∞, —Ç–∏–ø–∞ –æ–Ω –∂–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ñ–∏–ª—å–º–∞
    waiting_for_title = State()

@dp.message(CommandStart())
async def start(message: Message):
    await message.answer("–ø—Ä–∏–≤–µ—Ç –±—Ä–æ–¥—è–≥–∞ üòé", reply_markup=kb.startMenu)


@dp.message(F.text == "–ü–æ–µ—Ö–∞–ª–∏! üöú")
async def roomMenu(message: Message):
    await message.answer("–≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø—É—Ç—å........", reply_markup=kb.roomMenu)

@dp.message(F.text == "–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É")
async def preStartMenu(message: Message):
    #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
    await message.answer("–ø–æ–¥–æ–∂–¥–∏ –¥—Ä—É–∑–µ–π", reply_markup=kb.preStartMenu)

@dp.message(F.text == "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ")
async def preStartMenu(message: Message):
    #—Ç—É—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    await message.answer("–°–∫–∞–∂–∏ –ø–∞—Ä–æ–ª—å)))", reply_markup=kb.cancelMenu)

@dp.message(F.text == "–ù–∞—á–∞—Ç—å –ø–æ–¥–±–æ—Ä —Ñ–∏–ª—å–º–∞")
async def likeDislikeMenu(message: Message):
    await message.answer("–ø–æ–¥–æ–∂–¥–∏ –¥—Ä—É–∑–µ–π", reply_markup=kb.likeDislikeMenu)

@dp.message(F.text == "‚ù§Ô∏è")
async def likeDislikeMenu(message: Message):
    pass

@dp.message(F.text == "üëé")
async def likeDislikeMenu(message: Message):
    pass

@dp.message(F.text == "–û—Ç–º–µ–Ω–∞")
async def likeDislikeMenu(message: Message, state: FSMContext):
    await message.answer("–ø—Ä–∏–≤–µ—Ç –±—Ä–æ–¥—è–≥–∞ üòé", reply_markup=kb.startMenu)
    await state.clear()    # –¥–æ–±–∞–≤–∏–ª –¥–ª—è –≤–æ—Å—Ç—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –±–æ—Ç–∞, —á—Ç–æ–±—ã –Ω–µ –∏–∑ –ª—é–±–æ–≥–æ –º–µ–Ω—é –º–æ–∂–Ω–æ –±—ã–ª–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å film_info

@dp.message(F.text == "–ù–∞–π—Ç–∏ —Ñ–∏–ª—å–º")       # –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞
async def ask_for_title(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞", reply_markup=kb.searchMenu)
    await state.set_state(FilmSearchState.waiting_for_title)

@dp.message(FilmSearchState.waiting_for_title)  # –∑–¥–µ—Å—å –∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞
async def film_info(message: Message, state: FSMContext):
    title = message.text.strip()

    kinopoisk_id = get_kinopoisk_id_by_title(title) # —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º id —Ñ–∏–ª—å–º–∞ —á–µ—Ä–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if kinopoisk_id:
        film_data = get_film_data(kinopoisk_id) # –ø–æ—Ç–æ–º –ø–æ —ç—Ç–æ–º—É id –Ω–∞—Ö–æ–¥–∏–º —Å–∞–º —Ñ–∏–ª—å–º

        if film_data:
            name = film_data.get("name")
            year = film_data.get("year")
            genre = film_data.get("genre")
            rating = film_data.get("rating")
            description = film_data.get("description")
            poster_url = film_data.get("poster_url")

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–µ—Ä–æ–º –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ–∏–ª—å–º–µ
            if poster_url:
                await message.answer_photo(poster_url, caption=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n–ì–æ–¥: {year}\n–ñ–∞–Ω—Ä: {genre}\n–†–µ–π—Ç–∏–Ω–≥: {rating}\n–û–ø–∏—Å–∞–Ω–∏–µ: {description}")
            else:
                await message.answer(f"–ü–æ—Å—Ç–µ—Ä –¥–ª—è —Ñ–∏–ª—å–º–∞ {name} –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n–û–ø–∏—Å–∞–Ω–∏–µ:\n{description}")
        else:
            await message.answer("–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    else:
        await message.answer("–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")

services:
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6380:6380"
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Web UI
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5440:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: films
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  api-gateway:
    build: .
    container_name: film_api
    ports:
      - "3298:3298"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: films
    depends_on:
      - postgres
      - minio
    restart: unless-stopped

  tg_bot:
    build:
      context: .
      dockerfile: botSettings/Dockerfile
    container_name: telegram_bot
    environment:
      API_GATEWAY_URL: http://api-gateway:3298
      TELEGRAM_TOKEN: ${TOKEN}
    depends_on:
      - api-gateway
    restart: unless-stopped

  match-api:
    build:
      context: .
      dockerfile: matchFindService/Dockerfile
    container_name: match_api
    ports:
      - "4450:4450"
    depends_on:
      - redis
    restart: unless-stopped



volumes:
  postgres_data:
  minio_data: